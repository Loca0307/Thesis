
// Cool terminal effect 
// generated by chatgpt

const commands = [
    { cmd: "whoami", output: ["root"] },
    { cmd: "uname -a", output: ["Linux server 5.15.0-79-generic #86-Ubuntu SMP x86_64 GNU/Linux"] },
    {
        cmd: "ls -la", output: [
            "total 28",
            "drwxr-xr-x  3 root root 4096 Feb 23 12:34 .",
            "drwxr-xr-x 18 root root 4096 Feb 23 12:00 ..",
            "-rw-r--r--  1 root root   21 Feb 23 12:30 .bashrc",
            "-rw-r--r--  1 root root   14 Feb 23 12:30 .profile",
            "drwx------  2 root root 4096 Feb 23 12:30 .ssh"
        ]
    },
    {
        cmd: "cat /etc/os-release", output: [
            'NAME="Ubuntu"',
            'VERSION="22.04.3 LTS (Jammy Jellyfish)"',
            'ID=ubuntu',
            'ID_LIKE=debian',
            'PRETTY_NAME="Ubuntu 22.04.3 LTS"',
            'VERSION_ID="22.04"',
        ]
    },
    {
        cmd: "ping -c 3 8.8.8.8", output: [
            "PING 8.8.8.8 (8.8.8.8): 56 data bytes",
            "64 bytes from 8.8.8.8: icmp_seq=1 ttl=118 time=12.3 ms",
            "64 bytes from 8.8.8.8: icmp_seq=2 ttl=118 time=11.8 ms",
            "64 bytes from 8.8.8.8: icmp_seq=3 ttl=118 time=12.1 ms",
            "--- 8.8.8.8 ping statistics ---",
            "3 packets transmitted, 3 received, 0% packet loss, time 2000ms",
            "rtt min/avg/max/mdev = 11.8/12.0/12.3/0.2 ms"
        ]
    },
    {
        cmd: "df -h", output: [
            "Filesystem      Size  Used Avail Use% Mounted on",
            "/dev/sda1        50G   25G   25G  50% /"
        ]
    },
    {
        cmd: "top -n 1", output: [
            "top - 12:34:56 up 3 days,  5:42,  1 user,  load average: 0.24, 0.16, 0.15",
            "Tasks: 102 total,   1 running, 101 sleeping,   0 stopped,   0 zombie",
            "%Cpu(s):  1.3 us,  0.2 sy,  0.0 ni, 98.3 id,  0.1 wa,  0.0 hi,  0.1 si,  0.0 st",
            "KiB Mem :  8000000 total,  2000000 free,  3000000 used,  3000000 buff/cache",
            "KiB Swap:  4000000 total,  4000000 free,        0 used.  5000000 avail Mem "
        ]
    },
    { cmd: "clear", output: ["clear"] }

];

let consoleElement = document.getElementById("console");
let index = 0;

function addPrompt() {
    let promptLine = document.createElement("div");
    promptLine.className = "line";
    promptLine.innerHTML = `<span class="prompt">root@server:~$</span> `;
    consoleElement.appendChild(promptLine);
    return promptLine;
}

function typeCommand(command, promptLine, callback) {
    let i = 0;

    function type() {
        if (i < command.length) {
            promptLine.innerHTML = `<span class="prompt">root@server:~$</span> ` + command.substring(0, i + 1) + '<span class="cursor"></span>';
            i++;
            setTimeout(type, 50);
        } else {
            promptLine.innerHTML = `<span class="prompt">root@server:~$</span> ` + command;
            setTimeout(callback, 500);
        }
    }
    type();
}

function showOutput(output, callback) {
    if (output[0] === "clear") {
        consoleElement.innerHTML = "";
    } else {
        output.forEach(line => {
            let outputLine = document.createElement("div");
            outputLine.className = "line";
            outputLine.innerHTML = line;
            consoleElement.appendChild(outputLine);
        });

        cleanUpOldLines();
    }

    setTimeout(callback, 1000);
}

function cleanUpOldLines() {
    while (consoleElement.children.length > 7) {
        consoleElement.removeChild(consoleElement.children[0]);
    }
}

function runConsole() {
    if (index < commands.length) {
        const command = commands[index];

        let promptLine = addPrompt();

        setTimeout(() => {
            typeCommand(command.cmd, promptLine, () => {
                showOutput(command.output, () => {
                    index++;
                    runConsole();
                });
            });
        }, 500);

    } else {
        setTimeout(() => {
            consoleElement.innerHTML = "";
            index = 0;
            runConsole();
        }, 3000);
    }
}

runConsole();